INFO  17:10:44,431 - Compiling source file: C:\Faks\PP1\pp1domaci\workspace\MJCompiler\test\primer.mj
INFO  17:10:44,503 - #2 program
INFO  17:10:44,503 - #47 Program
INFO  17:10:44,503 - #11 class
INFO  17:10:44,504 - #47 A
INFO  17:10:44,504 - #3 {
INFO  17:10:44,504 - #47 int
INFO  17:10:44,505 - #47 x
INFO  17:10:44,505 - #9 [
INFO  17:10:44,505 - #10 ]
INFO  17:10:44,505 - #6 ,
INFO  17:10:44,505 - #47 y
INFO  17:10:44,505 - #9 [
INFO  17:10:44,506 - #10 ]
INFO  17:10:44,506 - #8 ;
INFO  17:10:44,506 - #4 }
INFO  17:10:44,506 - #5 const
INFO  17:10:44,507 - #47 int
INFO  17:10:44,507 - #47 pi
INFO  17:10:44,507 - #7 =
INFO  17:10:44,508 - #50 3
INFO  17:10:44,508 - #6 ,
INFO  17:10:44,508 - #47 e
INFO  17:10:44,508 - #7 =
INFO  17:10:44,508 - #50 2
INFO  17:10:44,508 - #8 ;
INFO  17:10:44,508 - #47 int
INFO  17:10:44,509 - #47 a
INFO  17:10:44,509 - #6 ,
INFO  17:10:44,509 - #47 b
INFO  17:10:44,509 - #8 ;
INFO  17:10:44,509 - #11 class
INFO  17:10:44,509 - #47 B
INFO  17:10:44,510 - #12 extends
INFO  17:10:44,510 - #47 A
INFO  17:10:44,510 - #3 {
INFO  17:10:44,510 - #47 int
INFO  17:10:44,510 - #47 i
INFO  17:10:44,510 - #8 ;
INFO  17:10:44,510 - #3 {
INFO  17:10:44,511 - #47 int
INFO  17:10:44,511 - #47 getValue
INFO  17:10:44,511 - #13 (
INFO  17:10:44,512 - #47 int
INFO  17:10:44,512 - #47 a
INFO  17:10:44,512 - #14 )
INFO  17:10:44,512 - #47 int
INFO  17:10:44,512 - #47 b
INFO  17:10:44,513 - #8 ;
INFO  17:10:44,513 - #47 bool
INFO  17:10:44,513 - #47 c
INFO  17:10:44,513 - #8 ;
INFO  17:10:44,513 - #3 {
INFO  17:10:44,514 - #31 return
INFO  17:10:44,515 - #47 a
INFO  17:10:44,515 - #34 .
INFO  17:10:44,516 - #47 i
INFO  17:10:44,516 - #22 +
INFO  17:10:44,516 - #47 a
INFO  17:10:44,518 - #34 .
INFO  17:10:44,518 - #47 x
INFO  17:10:44,518 - #9 [
INFO  17:10:44,519 - #50 0
INFO  17:10:44,519 - #10 ]
INFO  17:10:44,520 - #22 +
INFO  17:10:44,520 - #47 a
INFO  17:10:44,520 - #8 ;
INFO  17:10:44,520 - #4 }
INFO  17:10:44,521 - #15 void
INFO  17:10:44,523 - #47 m
INFO  17:10:44,523 - #13 (
INFO  17:10:44,523 - #14 )
INFO  17:10:44,523 - #47 int
INFO  17:10:44,524 - #47 a
INFO  17:10:44,524 - #8 ;
INFO  17:10:44,524 - #3 {
INFO  17:10:44,524 - #47 x
INFO  17:10:44,524 - #34 .
INFO  17:10:44,524 - #35 foreach
INFO  17:10:44,524 - #13 (
INFO  17:10:44,524 - #47 a
INFO  17:10:44,524 - #39 =>
INFO  17:10:44,524 - #33 print
INFO  17:10:44,524 - #13 (
INFO  17:10:44,525 - #47 a
INFO  17:10:44,525 - #14 )
INFO  17:10:44,526 - #8 ;
INFO  17:10:44,526 - #14 )
INFO  17:10:44,526 - #8 ;
INFO  17:10:44,526 - #4 }
INFO  17:10:44,526 - #4 }
INFO  17:10:44,527 - #4 }
INFO  17:10:44,527 - #11 class
INFO  17:10:44,527 - #47 C
INFO  17:10:44,527 - #12 extends
INFO  17:10:44,527 - #47 B
INFO  17:10:44,527 - #3 {
INFO  17:10:44,528 - #47 A
INFO  17:10:44,528 - #47 theA
INFO  17:10:44,528 - #8 ;
INFO  17:10:44,528 - #47 int
INFO  17:10:44,528 - #47 a
INFO  17:10:44,528 - #8 ;
INFO  17:10:44,528 - #4 }
INFO  17:10:44,528 - #3 {
INFO  17:10:44,528 - #15 void
INFO  17:10:44,528 - #47 main
INFO  17:10:44,528 - #13 (
INFO  17:10:44,528 - #14 )
INFO  17:10:44,528 - #47 A
INFO  17:10:44,529 - #47 a
INFO  17:10:44,529 - #8 ;
INFO  17:10:44,529 - #47 C
INFO  17:10:44,529 - #47 c
INFO  17:10:44,529 - #8 ;
INFO  17:10:44,529 - #47 int
INFO  17:10:44,529 - #47 i
INFO  17:10:44,529 - #8 ;
INFO  17:10:44,529 - #47 int
INFO  17:10:44,529 - #47 x
INFO  17:10:44,530 - #9 [
INFO  17:10:44,530 - #10 ]
INFO  17:10:44,530 - #8 ;
INFO  17:10:44,530 - #47 char
INFO  17:10:44,530 - #47 ch
INFO  17:10:44,530 - #8 ;
INFO  17:10:44,530 - #3 {
INFO  17:10:44,531 - #47 a
INFO  17:10:44,531 - #7 =
INFO  17:10:44,531 - #38 new
INFO  17:10:44,533 - #47 A
INFO  17:10:44,533 - #13 (
INFO  17:10:44,533 - #14 )
INFO  17:10:44,533 - #8 ;
INFO  17:10:44,534 - #47 a
INFO  17:10:44,534 - #34 .
INFO  17:10:44,534 - #47 x
INFO  17:10:44,534 - #7 =
INFO  17:10:44,534 - #38 new
INFO  17:10:44,534 - #47 int
INFO  17:10:44,534 - #9 [
INFO  17:10:44,534 - #50 5
INFO  17:10:44,534 - #10 ]
INFO  17:10:44,534 - #8 ;
INFO  17:10:44,535 - #47 a
INFO  17:10:44,535 - #34 .
INFO  17:10:44,535 - #47 y
INFO  17:10:44,535 - #7 =
INFO  17:10:44,535 - #38 new
INFO  17:10:44,535 - #47 int
INFO  17:10:44,535 - #9 [
INFO  17:10:44,535 - #50 5
INFO  17:10:44,535 - #10 ]
INFO  17:10:44,535 - #8 ;
INFO  17:10:44,535 - #47 c
INFO  17:10:44,535 - #7 =
INFO  17:10:44,535 - #38 new
INFO  17:10:44,535 - #47 C
INFO  17:10:44,535 - #13 (
INFO  17:10:44,535 - #14 )
INFO  17:10:44,535 - #8 ;
INFO  17:10:44,535 - #47 c
INFO  17:10:44,535 - #34 .
INFO  17:10:44,536 - #47 theA
INFO  17:10:44,536 - #7 =
INFO  17:10:44,536 - #47 a
INFO  17:10:44,536 - #8 ;
INFO  17:10:44,536 - #47 c
INFO  17:10:44,536 - #34 .
INFO  17:10:44,536 - #47 x
INFO  17:10:44,536 - #7 =
INFO  17:10:44,536 - #38 new
INFO  17:10:44,536 - #47 int
INFO  17:10:44,536 - #9 [
INFO  17:10:44,536 - #50 5
INFO  17:10:44,536 - #10 ]
INFO  17:10:44,537 - #8 ;
INFO  17:10:44,537 - #47 x
INFO  17:10:44,537 - #7 =
INFO  17:10:44,537 - #38 new
INFO  17:10:44,537 - #47 int
INFO  17:10:44,537 - #9 [
INFO  17:10:44,537 - #50 3
INFO  17:10:44,537 - #10 ]
INFO  17:10:44,537 - #8 ;
INFO  17:10:44,537 - #32 read
INFO  17:10:44,538 - #13 (
INFO  17:10:44,538 - #47 c
INFO  17:10:44,538 - #34 .
INFO  17:10:44,538 - #47 i
INFO  17:10:44,538 - #14 )
INFO  17:10:44,538 - #8 ;
INFO  17:10:44,538 - #47 i
INFO  17:10:44,538 - #7 =
INFO  17:10:44,538 - #50 0
INFO  17:10:44,538 - #8 ;
INFO  17:10:44,538 - #40 while
INFO  17:10:44,538 - #13 (
INFO  17:10:44,538 - #47 i
INFO  17:10:44,539 - #20 <
INFO  17:10:44,539 - #50 5
INFO  17:10:44,540 - #14 )
INFO  17:10:44,541 - #3 {
INFO  17:10:44,541 - #32 read
INFO  17:10:44,541 - #13 (
INFO  17:10:44,541 - #47 c
INFO  17:10:44,541 - #34 .
INFO  17:10:44,541 - #47 x
INFO  17:10:44,541 - #9 [
INFO  17:10:44,541 - #47 i
INFO  17:10:44,541 - #10 ]
INFO  17:10:44,542 - #14 )
INFO  17:10:44,542 - #8 ;
INFO  17:10:44,542 - #32 read
INFO  17:10:44,542 - #13 (
INFO  17:10:44,542 - #47 c
INFO  17:10:44,542 - #34 .
INFO  17:10:44,542 - #47 theA
INFO  17:10:44,542 - #34 .
INFO  17:10:44,542 - #47 x
INFO  17:10:44,542 - #9 [
INFO  17:10:44,542 - #47 i
INFO  17:10:44,542 - #10 ]
INFO  17:10:44,542 - #14 )
INFO  17:10:44,542 - #8 ;
INFO  17:10:44,542 - #47 i
INFO  17:10:44,543 - #41 ++
INFO  17:10:44,543 - #8 ;
INFO  17:10:44,543 - #4 }
INFO  17:10:44,543 - #9 [
INFO  17:10:44,543 - #47 a
INFO  17:10:44,543 - #6 ,
INFO  17:10:44,545 - #6 ,
ERROR 17:10:44,545 - 
Sintaksna greska na liniji 26
ERROR 17:10:44,546 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 26
INFO  17:10:44,546 - ================Ispis sintaksnog stabla================
INFO  17:10:44,546 - 
EmptyDesignatorList(
) [EmptyDesignatorList]
INFO  17:10:44,546 - =======================================================
INFO  17:10:44,546 - ==================SEMANTICKA OBRADA====================
INFO  17:10:44,546 - ==================SINTAKSNA ANALIZA====================
INFO  17:10:44,548 - 0	classes
INFO  17:10:44,548 - 0	methods in the program
INFO  17:10:44,548 - 0	global variables
INFO  17:10:44,548 - 0	global constants
INFO  17:10:44,548 - 0	global arrays
INFO  17:10:44,549 - 0	local variables in main
INFO  17:10:44,549 - 0	statements in main
INFO  17:10:44,549 - 0	function calls in main
INFO  17:10:44,549 - ==============SADRZAJ TABELE SIMBOLA===================
